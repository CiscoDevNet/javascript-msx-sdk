/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import VulnerabilityValidation from '../model/VulnerabilityValidation';
import VulnerabilityValidationPage from '../model/VulnerabilityValidationPage';

/**
* Validation service.
* @module api/ValidationApi
* @version 1.0.9
*/
export default class ValidationApi {

    /**
    * Constructs a new ValidationApi. 
    * @alias module:api/ValidationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns a filtered page of validations.
     * @param {Number} page 
     * @param {Number} pageSize 
     * @param {Object} opts Optional parameters
     * @param {Date} opts.startDate Start date for date range filter on validation execution date.
     * @param {Date} opts.endDate End date for date range filter on validation execution date.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/VulnerabilityValidationPage} and HTTP response
     */
    getValidateProductVersionPageWithHttpInfo(page, pageSize, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling getValidateProductVersionPage");
      }
      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling getValidateProductVersionPage");
      }

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'page': page,
        'pageSize': pageSize
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VulnerabilityValidationPage;
      return this.apiClient.callApi(
        '/vulnerability/api/v8/vulnerabilities/validations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns a filtered page of validations.
     * @param {Number} page 
     * @param {Number} pageSize 
     * @param {Object} opts Optional parameters
     * @param {Date} opts.startDate Start date for date range filter on validation execution date.
     * @param {Date} opts.endDate End date for date range filter on validation execution date.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/VulnerabilityValidationPage}
     */
    getValidateProductVersionPage(page, pageSize, opts) {
      return this.getValidateProductVersionPageWithHttpInfo(page, pageSize, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Validate registered product / verison combinations for vulnerabilities.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/VulnerabilityValidation} and HTTP response
     */
    validateProductVersionWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VulnerabilityValidation;
      return this.apiClient.callApi(
        '/vulnerability/api/v8/vulnerabilities/validations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Validate registered product / verison combinations for vulnerabilities.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/VulnerabilityValidation}
     */
    validateProductVersion() {
      return this.validateProductVersionWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
