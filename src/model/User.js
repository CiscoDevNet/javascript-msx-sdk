/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserAllOf from './UserAllOf';
import UserCreate from './UserCreate';

/**
 * The User model module.
 * @module model/User
 * @version 1.0.9
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * @alias module:model/User
     * @implements module:model/UserAllOf
     * @implements module:model/UserCreate
     * @param lastName {String} 
     * @param email {String} 
     * @param passwordPolicyName {String} 
     */
    constructor(lastName, email, passwordPolicyName) { 
        UserAllOf.initialize(this);UserCreate.initialize(this, lastName, email, passwordPolicyName);
        User.initialize(this, lastName, email, passwordPolicyName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lastName, email, passwordPolicyName) { 
        obj['lastName'] = lastName;
        obj['email'] = email;
        obj['passwordPolicyName'] = passwordPolicyName;
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();
            UserAllOf.constructFromObject(data, obj);
            UserCreate.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('roleIds')) {
                obj['roleIds'] = ApiClient.convertToType(data['roleIds'], ['String']);
            }
            if (data.hasOwnProperty('tenantIds')) {
                obj['tenantIds'] = ApiClient.convertToType(data['tenantIds'], ['String']);
            }
            if (data.hasOwnProperty('passwordPolicyName')) {
                obj['passwordPolicyName'] = ApiClient.convertToType(data['passwordPolicyName'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
User.prototype['id'] = undefined;

/**
 * @member {String} status
 */
User.prototype['status'] = undefined;

/**
 * @member {String} deleted
 */
User.prototype['deleted'] = undefined;

/**
 * @member {String} firstName
 */
User.prototype['firstName'] = undefined;

/**
 * @member {String} lastName
 */
User.prototype['lastName'] = undefined;

/**
 * @member {String} email
 */
User.prototype['email'] = undefined;

/**
 * @member {Array.<String>} roleIds
 */
User.prototype['roleIds'] = undefined;

/**
 * @member {Array.<String>} tenantIds
 */
User.prototype['tenantIds'] = undefined;

/**
 * @member {String} passwordPolicyName
 */
User.prototype['passwordPolicyName'] = undefined;

/**
 * @member {String} locale
 */
User.prototype['locale'] = undefined;

/**
 * @member {String} username
 */
User.prototype['username'] = undefined;

/**
 * @member {String} password
 */
User.prototype['password'] = undefined;


// Implement UserAllOf interface:
/**
 * @member {String} id
 */
UserAllOf.prototype['id'] = undefined;
/**
 * @member {String} status
 */
UserAllOf.prototype['status'] = undefined;
/**
 * @member {String} deleted
 */
UserAllOf.prototype['deleted'] = undefined;
// Implement UserCreate interface:
/**
 * @member {String} firstName
 */
UserCreate.prototype['firstName'] = undefined;
/**
 * @member {String} lastName
 */
UserCreate.prototype['lastName'] = undefined;
/**
 * @member {String} email
 */
UserCreate.prototype['email'] = undefined;
/**
 * @member {Array.<String>} roleIds
 */
UserCreate.prototype['roleIds'] = undefined;
/**
 * @member {Array.<String>} tenantIds
 */
UserCreate.prototype['tenantIds'] = undefined;
/**
 * @member {String} passwordPolicyName
 */
UserCreate.prototype['passwordPolicyName'] = undefined;
/**
 * @member {String} locale
 */
UserCreate.prototype['locale'] = undefined;
/**
 * @member {String} username
 */
UserCreate.prototype['username'] = undefined;
/**
 * @member {String} password
 */
UserCreate.prototype['password'] = undefined;




export default User;

