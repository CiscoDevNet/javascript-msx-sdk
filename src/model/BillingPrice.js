/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillingPriceAllOf from './BillingPriceAllOf';
import BillingPriceCreate from './BillingPriceCreate';

/**
 * The BillingPrice model module.
 * @module model/BillingPrice
 * @version 1.0.9
 */
class BillingPrice {
    /**
     * Constructs a new <code>BillingPrice</code>.
     * @alias module:model/BillingPrice
     * @implements module:model/BillingPriceAllOf
     * @implements module:model/BillingPriceCreate
     * @param name {String} 
     * @param type {String} 
     * @param price {Number} 
     * @param tenantId {String} 
     */
    constructor(name, type, price, tenantId) { 
        BillingPriceAllOf.initialize(this);BillingPriceCreate.initialize(this, name, type, price, tenantId);
        BillingPrice.initialize(this, name, type, price, tenantId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, type, price, tenantId) { 
        obj['name'] = name;
        obj['type'] = type;
        obj['price'] = price;
        obj['tenantId'] = tenantId;
    }

    /**
     * Constructs a <code>BillingPrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingPrice} obj Optional instance to populate.
     * @return {module:model/BillingPrice} The populated <code>BillingPrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingPrice();
            BillingPriceAllOf.constructFromObject(data, obj);
            BillingPriceCreate.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('modifiedOn')) {
                obj['modifiedOn'] = ApiClient.convertToType(data['modifiedOn'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('subtype')) {
                obj['subtype'] = ApiClient.convertToType(data['subtype'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('billingPeriod')) {
                obj['billingPeriod'] = ApiClient.convertToType(data['billingPeriod'], 'Number');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
BillingPrice.prototype['id'] = undefined;

/**
 * @member {Date} createdOn
 */
BillingPrice.prototype['createdOn'] = undefined;

/**
 * @member {Date} modifiedOn
 */
BillingPrice.prototype['modifiedOn'] = undefined;

/**
 * @member {String} name
 */
BillingPrice.prototype['name'] = undefined;

/**
 * @member {String} description
 */
BillingPrice.prototype['description'] = undefined;

/**
 * @member {String} type
 */
BillingPrice.prototype['type'] = undefined;

/**
 * @member {String} subtype
 */
BillingPrice.prototype['subtype'] = undefined;

/**
 * @member {String} source
 */
BillingPrice.prototype['source'] = undefined;

/**
 * @member {Number} price
 */
BillingPrice.prototype['price'] = undefined;

/**
 * @member {Number} billingPeriod
 */
BillingPrice.prototype['billingPeriod'] = undefined;

/**
 * @member {String} service
 */
BillingPrice.prototype['service'] = undefined;

/**
 * @member {String} tenantId
 */
BillingPrice.prototype['tenantId'] = undefined;


// Implement BillingPriceAllOf interface:
/**
 * @member {String} id
 */
BillingPriceAllOf.prototype['id'] = undefined;
/**
 * @member {Date} createdOn
 */
BillingPriceAllOf.prototype['createdOn'] = undefined;
/**
 * @member {Date} modifiedOn
 */
BillingPriceAllOf.prototype['modifiedOn'] = undefined;
// Implement BillingPriceCreate interface:
/**
 * @member {String} name
 */
BillingPriceCreate.prototype['name'] = undefined;
/**
 * @member {String} description
 */
BillingPriceCreate.prototype['description'] = undefined;
/**
 * @member {String} type
 */
BillingPriceCreate.prototype['type'] = undefined;
/**
 * @member {String} subtype
 */
BillingPriceCreate.prototype['subtype'] = undefined;
/**
 * @member {String} source
 */
BillingPriceCreate.prototype['source'] = undefined;
/**
 * @member {Number} price
 */
BillingPriceCreate.prototype['price'] = undefined;
/**
 * @member {Number} billingPeriod
 */
BillingPriceCreate.prototype['billingPeriod'] = undefined;
/**
 * @member {String} service
 */
BillingPriceCreate.prototype['service'] = undefined;
/**
 * @member {String} tenantId
 */
BillingPriceCreate.prototype['tenantId'] = undefined;




export default BillingPrice;

