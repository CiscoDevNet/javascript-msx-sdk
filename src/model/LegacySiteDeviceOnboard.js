/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LegacySiteDeviceOnboard model module.
 * @module model/LegacySiteDeviceOnboard
 * @version 1.0.9
 */
class LegacySiteDeviceOnboard {
    /**
     * Constructs a new <code>LegacySiteDeviceOnboard</code>.
     * @alias module:model/LegacySiteDeviceOnboard
     */
    constructor() { 
        
        LegacySiteDeviceOnboard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LegacySiteDeviceOnboard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LegacySiteDeviceOnboard} obj Optional instance to populate.
     * @return {module:model/LegacySiteDeviceOnboard} The populated <code>LegacySiteDeviceOnboard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LegacySiteDeviceOnboard();

            if (data.hasOwnProperty('deviceInstanceId')) {
                obj['deviceInstanceId'] = ApiClient.convertToType(data['deviceInstanceId'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('deviceName')) {
                obj['deviceName'] = ApiClient.convertToType(data['deviceName'], 'String');
            }
            if (data.hasOwnProperty('managed')) {
                obj['managed'] = ApiClient.convertToType(data['managed'], 'Boolean');
            }
            if (data.hasOwnProperty('deviceModel')) {
                obj['deviceModel'] = ApiClient.convertToType(data['deviceModel'], 'String');
            }
            if (data.hasOwnProperty('deviceOnboardingType')) {
                obj['deviceOnboardingType'] = ApiClient.convertToType(data['deviceOnboardingType'], 'String');
            }
            if (data.hasOwnProperty('deviceOnboardInformation')) {
                obj['deviceOnboardInformation'] = ApiClient.convertToType(data['deviceOnboardInformation'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * @member {String} deviceInstanceId
 */
LegacySiteDeviceOnboard.prototype['deviceInstanceId'] = undefined;

/**
 * @member {String} tenantId
 */
LegacySiteDeviceOnboard.prototype['tenantId'] = undefined;

/**
 * @member {String} deviceName
 */
LegacySiteDeviceOnboard.prototype['deviceName'] = undefined;

/**
 * @member {Boolean} managed
 * @default true
 */
LegacySiteDeviceOnboard.prototype['managed'] = true;

/**
 * @member {String} deviceModel
 */
LegacySiteDeviceOnboard.prototype['deviceModel'] = undefined;

/**
 * @member {String} deviceOnboardingType
 */
LegacySiteDeviceOnboard.prototype['deviceOnboardingType'] = undefined;

/**
 * @member {Object.<String, Object>} deviceOnboardInformation
 */
LegacySiteDeviceOnboard.prototype['deviceOnboardInformation'] = undefined;






export default LegacySiteDeviceOnboard;

