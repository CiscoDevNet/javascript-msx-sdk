/**
 * KAKAPO - MSX SDK
 * MSX Platform SDK
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkflowMetadataGitInfo model module.
 * @module model/WorkflowMetadataGitInfo
 * @version 1.0.1
 */
class WorkflowMetadataGitInfo {
    /**
     * Constructs a new <code>WorkflowMetadataGitInfo</code>.
     * @alias module:model/WorkflowMetadataGitInfo
     */
    constructor() { 
        
        WorkflowMetadataGitInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowMetadataGitInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowMetadataGitInfo} obj Optional instance to populate.
     * @return {module:model/WorkflowMetadataGitInfo} The populated <code>WorkflowMetadataGitInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowMetadataGitInfo();

            if (data.hasOwnProperty('target_id')) {
                obj['target_id'] = ApiClient.convertToType(data['target_id'], 'String');
            }
            if (data.hasOwnProperty('commit_hash')) {
                obj['commit_hash'] = ApiClient.convertToType(data['commit_hash'], 'String');
            }
            if (data.hasOwnProperty('comitted_by')) {
                obj['comitted_by'] = ApiClient.convertToType(data['comitted_by'], 'String');
            }
            if (data.hasOwnProperty('comitted_on')) {
                obj['comitted_on'] = ApiClient.convertToType(data['comitted_on'], 'String');
            }
            if (data.hasOwnProperty('commit_message')) {
                obj['commit_message'] = ApiClient.convertToType(data['commit_message'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} target_id
 */
WorkflowMetadataGitInfo.prototype['target_id'] = undefined;

/**
 * @member {String} commit_hash
 */
WorkflowMetadataGitInfo.prototype['commit_hash'] = undefined;

/**
 * @member {String} comitted_by
 */
WorkflowMetadataGitInfo.prototype['comitted_by'] = undefined;

/**
 * @member {String} comitted_on
 */
WorkflowMetadataGitInfo.prototype['comitted_on'] = undefined;

/**
 * @member {String} commit_message
 */
WorkflowMetadataGitInfo.prototype['commit_message'] = undefined;






export default WorkflowMetadataGitInfo;

