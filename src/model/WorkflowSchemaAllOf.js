/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkflowAccessMeta from './WorkflowAccessMeta';

/**
 * The WorkflowSchemaAllOf model module.
 * @module model/WorkflowSchemaAllOf
 * @version 1.0.9
 */
class WorkflowSchemaAllOf {
    /**
     * Constructs a new <code>WorkflowSchemaAllOf</code>.
     * @alias module:model/WorkflowSchemaAllOf
     */
    constructor() { 
        
        WorkflowSchemaAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowSchemaAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowSchemaAllOf} obj Optional instance to populate.
     * @return {module:model/WorkflowSchemaAllOf} The populated <code>WorkflowSchemaAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowSchemaAllOf();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('schema_id')) {
                obj['schema_id'] = ApiClient.convertToType(data['schema_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('base_type')) {
                obj['base_type'] = ApiClient.convertToType(data['base_type'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('invisible')) {
                obj['invisible'] = ApiClient.convertToType(data['invisible'], 'Boolean');
            }
            if (data.hasOwnProperty('inherits')) {
                obj['inherits'] = ApiClient.convertToType(data['inherits'], 'String');
            }
            if (data.hasOwnProperty('access_meta')) {
                obj['access_meta'] = WorkflowAccessMeta.constructFromObject(data['access_meta']);
            }
            if (data.hasOwnProperty('variable_schema')) {
                obj['variable_schema'] = ApiClient.convertToType(data['variable_schema'], {'String': Object});
            }
            if (data.hasOwnProperty('property_schema')) {
                obj['property_schema'] = ApiClient.convertToType(data['property_schema'], {'String': Object});
            }
            if (data.hasOwnProperty('output_schema')) {
                obj['output_schema'] = ApiClient.convertToType(data['output_schema'], {'String': Object});
            }
            if (data.hasOwnProperty('view_config')) {
                obj['view_config'] = ApiClient.convertToType(data['view_config'], {'String': Object});
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
WorkflowSchemaAllOf.prototype['id'] = undefined;

/**
 * @member {String} schema_id
 */
WorkflowSchemaAllOf.prototype['schema_id'] = undefined;

/**
 * @member {String} name
 */
WorkflowSchemaAllOf.prototype['name'] = undefined;

/**
 * @member {String} title
 */
WorkflowSchemaAllOf.prototype['title'] = undefined;

/**
 * @member {String} description
 */
WorkflowSchemaAllOf.prototype['description'] = undefined;

/**
 * @member {String} type
 */
WorkflowSchemaAllOf.prototype['type'] = undefined;

/**
 * @member {String} base_type
 */
WorkflowSchemaAllOf.prototype['base_type'] = undefined;

/**
 * @member {String} version
 */
WorkflowSchemaAllOf.prototype['version'] = undefined;

/**
 * @member {Boolean} invisible
 */
WorkflowSchemaAllOf.prototype['invisible'] = undefined;

/**
 * @member {String} inherits
 */
WorkflowSchemaAllOf.prototype['inherits'] = undefined;

/**
 * @member {module:model/WorkflowAccessMeta} access_meta
 */
WorkflowSchemaAllOf.prototype['access_meta'] = undefined;

/**
 * @member {Object.<String, Object>} variable_schema
 */
WorkflowSchemaAllOf.prototype['variable_schema'] = undefined;

/**
 * @member {Object.<String, Object>} property_schema
 */
WorkflowSchemaAllOf.prototype['property_schema'] = undefined;

/**
 * @member {Object.<String, Object>} output_schema
 */
WorkflowSchemaAllOf.prototype['output_schema'] = undefined;

/**
 * @member {Object.<String, Object>} view_config
 */
WorkflowSchemaAllOf.prototype['view_config'] = undefined;

/**
 * @member {Object.<String, Object>} attributes
 */
WorkflowSchemaAllOf.prototype['attributes'] = undefined;






export default WorkflowSchemaAllOf;

