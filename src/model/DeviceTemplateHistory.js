/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NameValue from './NameValue';

/**
 * The DeviceTemplateHistory model module.
 * @module model/DeviceTemplateHistory
 * @version 1.0.9
 */
class DeviceTemplateHistory {
    /**
     * Constructs a new <code>DeviceTemplateHistory</code>.
     * @alias module:model/DeviceTemplateHistory
     */
    constructor() { 
        
        DeviceTemplateHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceTemplateHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceTemplateHistory} obj Optional instance to populate.
     * @return {module:model/DeviceTemplateHistory} The populated <code>DeviceTemplateHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceTemplateHistory();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('templateId')) {
                obj['templateId'] = ApiClient.convertToType(data['templateId'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusError')) {
                obj['statusError'] = ApiClient.convertToType(data['statusError'], 'String');
            }
            if (data.hasOwnProperty('templateParams')) {
                obj['templateParams'] = ApiClient.convertToType(data['templateParams'], [NameValue]);
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
DeviceTemplateHistory.prototype['id'] = undefined;

/**
 * @member {String} deviceId
 */
DeviceTemplateHistory.prototype['deviceId'] = undefined;

/**
 * @member {String} instanceId
 */
DeviceTemplateHistory.prototype['instanceId'] = undefined;

/**
 * @member {String} templateId
 */
DeviceTemplateHistory.prototype['templateId'] = undefined;

/**
 * @member {String} userId
 */
DeviceTemplateHistory.prototype['userId'] = undefined;

/**
 * @member {module:model/DeviceTemplateHistory.StatusEnum} status
 */
DeviceTemplateHistory.prototype['status'] = undefined;

/**
 * @member {String} statusError
 */
DeviceTemplateHistory.prototype['statusError'] = undefined;

/**
 * @member {Array.<module:model/NameValue>} templateParams
 */
DeviceTemplateHistory.prototype['templateParams'] = undefined;

/**
 * @member {Date} lastUpdated
 */
DeviceTemplateHistory.prototype['lastUpdated'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
DeviceTemplateHistory['StatusEnum'] = {

    /**
     * value: "Applied"
     * @const
     */
    "Applied": "Applied",

    /**
     * value: "Applying"
     * @const
     */
    "Applying": "Applying",

    /**
     * value: "Apply Failed"
     * @const
     */
    "Apply Failed": "Apply Failed",

    /**
     * value: "Detached"
     * @const
     */
    "Detached": "Detached",

    /**
     * value: "Detaching"
     * @const
     */
    "Detaching": "Detaching",

    /**
     * value: "Detach Failed"
     * @const
     */
    "Detach Failed": "Detach Failed"
};



export default DeviceTemplateHistory;

