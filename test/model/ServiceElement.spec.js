/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JavascriptMsxSdk);
  }
}(this, function(expect, JavascriptMsxSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JavascriptMsxSdk.ServiceElement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServiceElement', function() {
    it('should create an instance of ServiceElement', function() {
      // uncomment below and update the code to test ServiceElement
      //var instane = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be.a(JavascriptMsxSdk.ServiceElement);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property header (base name: "header")', function() {
      // uncomment below and update the code to test the property header
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property hint (base name: "hint")', function() {
      // uncomment below and update the code to test the property hint
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property inputType (base name: "inputType")', function() {
      // uncomment below and update the code to test the property inputType
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property component (base name: "component")', function() {
      // uncomment below and update the code to test the property component
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property maxLimit (base name: "maxLimit")', function() {
      // uncomment below and update the code to test the property maxLimit
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property minLimit (base name: "minLimit")', function() {
      // uncomment below and update the code to test the property minLimit
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property valueList (base name: "valueList")', function() {
      // uncomment below and update the code to test the property valueList
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property allowedOptionValues (base name: "allowedOptionValues")', function() {
      // uncomment below and update the code to test the property allowedOptionValues
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property allowedValues (base name: "allowedValues")', function() {
      // uncomment below and update the code to test the property allowedValues
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property mandatory (base name: "mandatory")', function() {
      // uncomment below and update the code to test the property mandatory
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property section (base name: "section")', function() {
      // uncomment below and update the code to test the property section
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property billable (base name: "billable")', function() {
      // uncomment below and update the code to test the property billable
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property hidden (base name: "hidden")', function() {
      // uncomment below and update the code to test the property hidden
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property parentName (base name: "parentName")', function() {
      // uncomment below and update the code to test the property parentName
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property supported (base name: "supported")', function() {
      // uncomment below and update the code to test the property supported
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property dynamicData (base name: "dynamicData")', function() {
      // uncomment below and update the code to test the property dynamicData
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property minValue (base name: "minValue")', function() {
      // uncomment below and update the code to test the property minValue
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property maxValue (base name: "maxValue")', function() {
      // uncomment below and update the code to test the property maxValue
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property stepSize (base name: "stepSize")', function() {
      // uncomment below and update the code to test the property stepSize
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property pricingAtttributes (base name: "pricingAtttributes")', function() {
      // uncomment below and update the code to test the property pricingAtttributes
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

    it('should have the property childElements (base name: "childElements")', function() {
      // uncomment below and update the code to test the property childElements
      //var instance = new JavascriptMsxSdk.ServiceElement();
      //expect(instance).to.be();
    });

  });

}));
