/**
 * MSX SDK
 * MSX SDK client.
 *
 * The version of the OpenAPI document: 1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JavascriptMsxSdk);
  }
}(this, function(expect, JavascriptMsxSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JavascriptMsxSdk.WorkflowAction();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WorkflowAction', function() {
    it('should create an instance of WorkflowAction', function() {
      // uncomment below and update the code to test WorkflowAction
      //var instane = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be.a(JavascriptMsxSdk.WorkflowAction);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property workflowId (base name: "workflow_id")', function() {
      // uncomment below and update the code to test the property workflowId
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property definitionId (base name: "definition_id")', function() {
      // uncomment below and update the code to test the property definitionId
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property schemaId (base name: "schema_id")', function() {
      // uncomment below and update the code to test the property schemaId
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property adapterId (base name: "adapter_id")', function() {
      // uncomment below and update the code to test the property adapterId
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property uniqueName (base name: "unique_name")', function() {
      // uncomment below and update the code to test the property uniqueName
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property baseType (base name: "base_type")', function() {
      // uncomment below and update the code to test the property baseType
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property objectType (base name: "object_type")', function() {
      // uncomment below and update the code to test the property objectType
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property startedBy (base name: "started_by")', function() {
      // uncomment below and update the code to test the property startedBy
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property blocks (base name: "blocks")', function() {
      // uncomment below and update the code to test the property blocks
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property output (base name: "output")', function() {
      // uncomment below and update the code to test the property output
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property startedOn (base name: "started_on")', function() {
      // uncomment below and update the code to test the property startedOn
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

    it('should have the property endedOn (base name: "ended_on")', function() {
      // uncomment below and update the code to test the property endedOn
      //var instance = new JavascriptMsxSdk.WorkflowAction();
      //expect(instance).to.be();
    });

  });

}));
